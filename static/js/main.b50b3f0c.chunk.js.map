{"version":3,"sources":["Components/Details/Color/SelectColor.js","Components/Details/Slider/Slider.js","Firebase/firebase.js","Context/AuthContext.js","Context/Context.js","Components/Details/FillColor/FillColor.js","Components/Details/ToggleLines/ToggleLines.js","Components/Details/RefreshGrid/RefreshGrid.js","Components/Details/Eraser/Eraser.js","Components/Details/Details.js","Components/Title/Title.js","Components/Grid/SquareGrid.js","Components/Grid/Grid.js","Components/ImageOptions/SaveImage/SaveImage.js","Components/ImageOptions/ImageOptions.js","Components/DisplaySavedContent/DisplayContent.js","Components/SwitchPage/CheckUserContent.js","Components/LoginandSignIn/Buttons/loginButton.js","Components/LoginandSignIn/Buttons/signInButton.js","Components/LoginandSignIn/Buttons/logout.js","img/landscape.jpg","Pages/MainPage.js","Components/SwitchPage/BackButton.js","Components/SharedContent/ContentSquares.js","Components/SharedContent/mainContainer.js","Pages/UserContent.js","Components/LoginandSignIn/signInPage.js","Components/LoginandSignIn/logInPage.js","App.js","index.js"],"names":["SelectColor","props","className","type","value","color","onChange","event","setColor","target","Slider","name","min","max","id","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","AuthContext","React","createContext","AuthContextProvider","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","signUp","email","password","createUserWithEmailAndPassword","logIn","signInWithEmailAndPassword","logOut","signOut","children","Context","ContextProvider","authCtx","useContext","database","collection","sideValue","setSideValue","mouseDown","setMouseDown","bkGroundColor","setBkGroundColor","displayLines","setDisplayLines","erase","setErase","imageName","setImageName","imageContainer","setImageContainer","userContent","setUserContent","refreshGrid","document","querySelector","querySelectorAll","forEach","div","style","backgroundColor","e","a","preventDefault","html2canvas","then","canvas","data","toDataURL","timeStamp","Math","floor","Date","now","emailId","identifier","uid","date","day","getDate","month","getMonth","year","getFullYear","imgToUpload","timestamp","imgData","createdAt","add","item","doc","delete","orderBy","onSnapshot","snapshot","docs","map","onSliderChange","selectColor","squareMouseDown","stopDraw","startDraw","dragDraw","colorFill","toggleLineDisplay","prevState","toggleErase","SaveImage","newImg","concat","imageNameHandler","touchDragDraw","touches","x","clientX","y","clientY","hoveredElem","elementFromPoint","PostToCloud","deleteContent","FillColor","onClick","toggleFillColor","ToggleLines","toggleLine","RefreshGrid","refresh","Eraser","onToggle","eraser","Details","ctx","Title","SquareGrid","Fragment","border","onMouseDown","onTouchStart","Grid","squareArr","i","push","squares","gridSide","gridTemplateColumns","gridTemplateRows","onMouseUp","onMouseLeave","onMouseOver","onTouchMove","onTouchEnd","onTouchCancel","htmlFor","imgName","imgNameHandler","saveImg","postImg","ImageOptions","DisplayContent","showImages","src","alt","CheckUserContent","to","LogInButton","SignInButton","LogOut","error","setError","history","useHistory","onLogOutHandler","MainPage","bgImg","BackButton","marginTop","ContentSquares","deleteItem","display","MainContentContainer","allContentArr","UserContent","SignInPage","emailRef","useRef","passwordRef","confirmPasswordRef","loading","setLoading","current","onSubmit","ref","required","disabled","LogInPage","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b50b3f0c.chunk.js","sourcesContent":["function SelectColor(props){\r\n    return(\r\n        <div className=\"colorSelector\">\r\n            Select color:\r\n            <input \r\n            type=\"color\" \r\n            className=\"colorSelect\" \r\n            value={props.color} \r\n            onChange={(event) => props.setColor(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectColor","function Slider(props){\r\n\r\n\r\n    return (\r\n        <form className=\"sizeContainer\">\r\n            <input\r\n              type=\"range\"\r\n              className=\"inputSide\"\r\n              name=\"Grid Size\"\r\n              min=\"10\"\r\n              max=\"50\"\r\n              value={props.value}\r\n              onChange={event => props.onChange(event.target.value)}\r\n              \r\n            />\r\n\r\n            <span>Grid Size: <span id=\"gridSizeText\">{props.value} x {props.value}</span></span>\r\n          </form>\r\n    )\r\n}\r\n\r\nexport default Slider","// import {initializeApp} from 'firebase/app'\r\n// import {getFirestore} from 'firebase/firestore'\r\n\r\nimport firebase from 'firebase/compat/app'\r\nimport \"firebase/compat/auth\"\r\nimport 'firebase/compat/firestore'\r\n\r\nconst firebaseConfig = {\r\n      apiKey: \"AIzaSyD8RtQCoEDaLThEE698alIMbKk_YPhgxCQ\",\r\n      authDomain: \"pixel-share.firebaseapp.com\",\r\n      projectId: \"pixel-share\",\r\n      storageBucket: \"pixel-share.appspot.com\",\r\n      messagingSenderId: \"798483548195\",\r\n      appId: \"1:798483548195:web:0c040fa0b39daaa1630996\"\r\n    };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = app.auth()\r\nexport const firestore = app.firestore()\r\n\r\n\r\nexport default app\r\n\r\n// export default getFirestore()","import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../Firebase/firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nfunction AuthContextProvider(props){\r\n    \r\n    const [currentUser, setCurrentUser] = useState()\r\n\r\n    function signUp(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logIn(email, password){\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logOut(){\r\n        return auth.signOut()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n        })\r\n        return unsub\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <AuthContext.Provider \r\n            value={{\r\n                currentUser,\r\n                signUp,\r\n                logIn, logOut\r\n            }}\r\n        \r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport {AuthContextProvider, AuthContext}","import React, { useContext, useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport html2canvas from 'html2canvas'\r\nimport { firestore } from '../Firebase/firebase';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction ContextProvider(props){\r\n\r\n    const authCtx = useContext(AuthContext)\r\n\r\n    const database = firestore.collection('pixelImg')\r\n\r\n    const [sideValue, setSideValue] = useState(20)\r\n    const [color, setColor] = useState(`#000000`)\r\n    const [mouseDown, setMouseDown] = useState(false)\r\n    const [bkGroundColor, setBkGroundColor] = useState(`#FFFFFF`)\r\n    const [displayLines, setDisplayLines] = useState(true)\r\n    const [erase, setErase] = useState(false)\r\n    const [imageName, setImageName] = useState('')\r\n    const [imageContainer, setImageContainer] = useState([])\r\n    const [userContent, setUserContent] = useState([]);\r\n\r\n\r\n    \r\n\r\n\r\n    function onSliderChange(value){\r\n        setSideValue(value)\r\n    }\r\n\r\n    function selectColor(value){\r\n        setColor(value)\r\n    }\r\n\r\n\r\n    function squareMouseDown(e){\r\n        if(erase){\r\n            e.target.style.backgroundColor = null\r\n        } else {\r\n            e.target.style.backgroundColor = color\r\n        }\r\n    }\r\n\r\n\r\n    function stopDraw(){\r\n        setMouseDown(false)\r\n    }\r\n\r\n    function startDraw(){\r\n        setMouseDown(true)\r\n    }\r\n\r\n    function dragDraw(event){\r\n        if(mouseDown){\r\n            if(event.target.className === 'square'){\r\n                if(erase){\r\n                    event.target.style.backgroundColor = null\r\n                } else {\r\n                event.target.style.backgroundColor = color\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function touchDragDraw(event){\r\n        //console.log(event.touches[0].target.className)\r\n        if(mouseDown){\r\n            if(event.touches[0].target.className === 'square'){\r\n                let x = event.touches[0].clientX\r\n                let y = event.touches[0].clientY\r\n                let hoveredElem = document.elementFromPoint(x, y)\r\n                //console.log(hoveredElem.className)\r\n                if(hoveredElem.className === \"square\"){\r\n                    if(erase){\r\n                        hoveredElem.style.backgroundColor = null\r\n                    } else {\r\n                        hoveredElem.style.backgroundColor = color\r\n                    }\r\n\r\n                } else {\r\n                    setMouseDown(false)\r\n                }\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    function toggleErase(){\r\n        setErase(prevState => !prevState)\r\n    }\r\n\r\n\r\n    function colorFill(){\r\n        setBkGroundColor(color)\r\n    }\r\n\r\n    function toggleLineDisplay(){\r\n        setDisplayLines(prevState => !prevState)\r\n    \r\n    }\r\n\r\n    function refreshGrid(){\r\n        document.querySelector(\".grid\").querySelectorAll(\"div\").forEach(div => \r\n            div.style.backgroundColor = null )\r\n        setBkGroundColor('#FFFFFF')\r\n        setSideValue(20)\r\n        setDisplayLines(true)\r\n        setImageName(\"\")\r\n    }\r\n\r\n\r\n    function SaveImage(e){\r\n        e.preventDefault()\r\n        html2canvas(document.querySelector(\"#capture\")).then(canvas => {\r\n            let data = canvas.toDataURL(\"image/png\")\r\n            let newImg = {name: imageName===\"\"? \"untitled\": imageName, imgData: data}\r\n            setImageContainer(prevState => prevState.concat(newImg))\r\n            refreshGrid()\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    async function PostToCloud(e){\r\n        e.preventDefault()\r\n         await html2canvas(document.querySelector(\"#capture\")).then(canvas => {\r\n            let data = canvas.toDataURL(\"image/png\")\r\n            let timeStamp = Math.floor(Date.now()/1000)\r\n            let emailId = authCtx.currentUser.email\r\n            let identifier = authCtx.currentUser.uid\r\n            let date = new Date()\r\n            let day = date.getDate();\r\n            let month = date.getMonth()+1;\r\n            let year = date.getFullYear();\r\n             \r\n            let imgToUpload = {\r\n                name: imageName===\"\"? \"untitled\": imageName, \r\n                timestamp: timeStamp, \r\n                imgData: data,\r\n                email: emailId,\r\n                uid: identifier,\r\n                createdAt: `${day}/${month}/${year}`\r\n            }\r\n            \r\n            database.add(imgToUpload)\r\n            \r\n        \r\n             //     const collectionRef = collection(db, \"pixelImg\")\r\n        //     const payload = imgToUpload\r\n        //     const docRef = addDoc(collectionRef, payload)\r\n        //     console.log(docRef.id)\r\n        //     console.log(\"posted\")\r\n        })\r\n        refreshGrid()\r\n         \r\n    }\r\n\r\n    async function deleteContent(item){\r\n        await database.doc(item).delete()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(authCtx.currentUser){\r\n        return database\r\n            .orderBy(\"timestamp\", 'desc')\r\n            .onSnapshot(\r\n                (snapshot) => {\r\n                    //snapshot.forEach(doc => console.log(doc.data())\r\n                    setUserContent(snapshot.docs.map(doc => \r\n                        {return {...doc.data(), id: doc.id}}\r\n                        ))               \r\n                })\r\n            } else {\r\n                return null\r\n            }\r\n            \r\n    }, [authCtx.currentUser])\r\n\r\n    \r\n\r\n    // useEffect(() => \r\n    //     onSnapshot(collection(db, \"pixelImg\"), (snapshot) => {\r\n    //         //console.log(snapshot.docs.map((doc) => doc))\r\n    //         setUserContent(snapshot.docs.map((doc) => doc.data()))\r\n    //     })   \r\n    // ,[])\r\n\r\n\r\n\r\n    function imageNameHandler(value){\r\n        setImageName(value)\r\n    }\r\n\r\n    //console.log(mouseDown)\r\n    // console.log(color)\r\n    // console.log(imageContainer)\r\n    // console.log(imageName)\r\n    \r\n    return(\r\n        <Context.Provider \r\n            value={{\r\n                sideValue, onSliderChange, \r\n                color, selectColor, squareMouseDown, \r\n                stopDraw, startDraw, dragDraw, \r\n                bkGroundColor, colorFill,\r\n                displayLines, toggleLineDisplay,\r\n                refreshGrid, toggleErase, erase,\r\n                SaveImage, imageNameHandler, imageName, imageContainer,\r\n                touchDragDraw, PostToCloud, userContent, deleteContent\r\n                \r\n                    }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","function FillColor(props){\r\n    return (\r\n        <div className=\"colorFill\">\r\n            <button \r\n                className=\"fillColorBtn\" \r\n                id=\"colorGrid\" \r\n                onClick={() => props.toggleFillColor()}\r\n                >\r\n                    Change Background Color\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FillColor","function ToggleLines(props){\r\n    return(\r\n        <div>\r\n            <button className=\"lineButton\" id=\"gridLines\" onClick={() => props.toggleLine()}>\r\n            Toggle Grid Lines\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleLines","function RefreshGrid(props){\r\n    return (\r\n        <div>\r\n            <button className=\"refresh\" onClick={() => {props.refresh()}}>\r\n            Refresh Grid\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RefreshGrid","function Eraser(props){\r\n    return (\r\n        <div>\r\n            <button \r\n                className=\"eraseBtn\" \r\n                onClick={() => props.onToggle()}\r\n                style={{\r\n                    backgroundColor: props.eraser? \"black\" : 'rgb(233, 233, 233)',\r\n                    color: props.eraser? \"white\" : \"black\"\r\n                    }}\r\n                \r\n                >Toggle Eraser</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eraser","import SelectColor from \"./Color/SelectColor\"\r\nimport Slider from \"./Slider/Slider\"\r\nimport {Context} from '../../Context/Context'\r\nimport {useContext} from 'react'\r\nimport FillColor from \"./FillColor/FillColor\"\r\nimport ToggleLines from \"./ToggleLines/ToggleLines\"\r\nimport RefreshGrid from \"./RefreshGrid/RefreshGrid\"\r\nimport Eraser from \"./Eraser/Eraser\"\r\n\r\n\r\nfunction Details(){\r\n\r\n    const ctx = useContext(Context)\r\n\r\n    return(\r\n        <div className=\"columnDetails\">\r\n            <Slider value={ctx.sideValue} onChange={ctx.onSliderChange}/>\r\n            <SelectColor color={ctx.color} setColor={ctx.selectColor}/>\r\n            <div className=\"allButtons\">\r\n                <Eraser onToggle={ctx.toggleErase} eraser={ctx.erase}/>\r\n                <FillColor toggleFillColor={ctx.colorFill}/>\r\n                <ToggleLines toggleLine={ctx.toggleLineDisplay}/>\r\n                <RefreshGrid refresh={ctx.refreshGrid}/>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details","function Title(){\r\n    return(\r\n        <h2 className=\"title\">Pixel Draw</h2>\r\n    )\r\n}\r\n\r\nexport default Title","import React from \"react\";\r\n\r\nfunction SquareGrid(props) {\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        key={props.id}\r\n        className=\"square\"\r\n        style={{\r\n          border: props.displayLines ? \"solid 1px black\" : \"none\",\r\n          //backgroundColor: `${props.bkGroundColor}`,\r\n        }}\r\n        onMouseDown={(e) => {\r\n          props.squareMouseDown(e);\r\n        }}\r\n        onTouchStart={(e) => {\r\n          props.squareMouseDown(e);\r\n        }}\r\n        \r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SquareGrid;\r\n","import {Context} from '../../Context/Context'\r\nimport { useContext } from 'react'\r\nimport SquareGrid from './SquareGrid';\r\n\r\n\r\nfunction Grid() {\r\n    const ctx = useContext(Context)\r\n\r\n  // let gridSide = ctx.sideValue;\r\n\r\n  // let squareArr = [];\r\n\r\n  // for (let i = 0; i < gridSide ** 2; i++) {\r\n  //   squareArr.push(\r\n  //     <div \r\n  //       key={i}\r\n  //       className=\"square\" \r\n  //       style={{ \r\n  //               border: ctx.displayLines? \"solid 1px black\" : 'none',\r\n  //               backgroundColor: `${ctx.bkGroundColor}`\r\n  //             }}\r\n  //       onMouseDown={(e) => {ctx.squareMouseDown(e)}}\r\n  //       id={i}\r\n  //       ></div>\r\n  //   );\r\n  // }\r\n\r\n\r\n\r\n  let squareArr = [];\r\n\r\n  for (let i = 0; i < ctx.sideValue ** 2; i++) {\r\n    squareArr.push(i);\r\n  }\r\n\r\n  const squares = squareArr.map(item => (\r\n        <SquareGrid \r\n          key={item}\r\n          id={item}\r\n          gridSide = {ctx.sideValue}\r\n          displayLines = {ctx.displayLines}\r\n          //bkGroundColor = {ctx.bkGroundColor}\r\n          squareMouseDown = {ctx.squareMouseDown}\r\n          \r\n        />\r\n  ))\r\n\r\n\r\n  return (\r\n    <div className=\"columnGrid\" id=\"capture\">\r\n      <div\r\n        className=\"grid\"\r\n        style={{\r\n          gridTemplateColumns: `repeat(${ctx.sideValue}, 1fr)`,\r\n          gridTemplateRows: `repeat(${ctx.sideValue}, 1fr)`,\r\n          backgroundColor: `${ctx.bkGroundColor}`\r\n        }}\r\n        onMouseDown={() => ctx.startDraw()}\r\n        onMouseUp={() => ctx.stopDraw()}\r\n        onMouseLeave={() => ctx.stopDraw()}\r\n        onMouseOver={(event) => ctx.dragDraw(event)}\r\n        \r\n        onTouchStart={() => ctx.startDraw()}\r\n        onTouchMove={(event) => ctx.touchDragDraw(event)}\r\n        onTouchEnd={() => ctx.stopDraw()}\r\n        onTouchCancel={() => ctx.stopDraw()}\r\n        \r\n      >\r\n        {squares}\r\n        {/* {squareArr} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","function SaveImage(props){\r\n\r\n    \r\n    return (\r\n        // <form onSubmit={(e) => props.saveImg(e)}>\r\n        //   <label htmlFor=\"imgName\">Image Name:</label>\r\n        //   <input type=\"text\" id=\"imgName\" value={props.imgName} onChange={(e) => props.imgNameHandler(e.target.value)} />\r\n        //   <button type=\"submit\" className=\"saveButton\">Save</button>\r\n        // </form>\r\n\r\n        <div>\r\n          <div>\r\n            <label htmlFor=\"imgName\">Image Name:</label>\r\n            <input type=\"text\" id=\"imgName\" value={props.imgName} onChange={(e) => props.imgNameHandler(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <button className=\"saveButton\" onClick={(e) => props.saveImg(e)}>Save Locally</button>\r\n            <button className=\"postButton\" onClick={(event) => props.postImg(event)}>Post to Gallery</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n     \r\n    )\r\n}\r\n\r\nexport default SaveImage","import SaveImage from \"./SaveImage/SaveImage\"\r\nimport { Context } from \"../../Context/Context\"\r\nimport { useContext } from \"react\"\r\n\r\n\r\nfunction ImageOptions(){\r\n\r\n    const ctx = useContext(Context)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"footerArea\">\r\n            <SaveImage \r\n                saveImg={ctx.SaveImage} \r\n                imgName={ctx.imageName} \r\n                imgNameHandler={ctx.imageNameHandler}\r\n                postImg={ctx.PostToCloud}   \r\n                />\r\n            {/* <PostImage \r\n                postImg={ctx.PostToCloud}            \r\n                /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageOptions","import {Context} from '../../Context/Context'\r\nimport { useContext } from 'react'\r\n\r\n\r\nfunction DisplayContent(){\r\n\r\n    const ctx = useContext(Context)\r\n\r\n\r\n    const showImages = ctx.imageContainer.map(item => (\r\n        <div className=\"userImg\">\r\n            <img src={item.imgData} alt=\"Trying to load content\"></img>\r\n            <p>{item.name}</p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"imageContainer\" id=\"imgContainer\">\r\n            {showImages}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayContent","\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction CheckUserContent(){\r\n\r\n    return (\r\n        <div className=\"galleryBtnContainer\">\r\n        <Link to=\"/usercontent\">\r\n        <button className=\"checkContent\">View Gallery</button>\r\n        </Link>\r\n        </div> \r\n    )\r\n    \r\n}\r\n\r\nexport default CheckUserContent","import {Link} from 'react-router-dom'\r\n\r\n\r\nfunction LogInButton(){\r\n    return (\r\n        <Link to=\"/login\">\r\n        <button className=\"logInButton\">Log In</button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LogInButton","import {Link} from 'react-router-dom'\r\n\r\nfunction SignInButton(){\r\n    return (\r\n        <Link to=\"/signin\">\r\n        <button className=\"signInButton\">SignUp</button>\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\nexport default SignInButton","import { useContext, useState } from 'react'\r\n// import { useState } from 'react/cjs/react.development'\r\nimport {AuthContext} from '../../../Context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction LogOut(){\r\n\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const authCtx = useContext(AuthContext)\r\n    const history = useHistory()\r\n    \r\n    async function onLogOutHandler(){\r\n        setError(\"\")\r\n\r\n        try {\r\n            await authCtx.logOut()\r\n            history.push('/')\r\n        } catch {\r\n            setError(\"Failed to LogOut\")\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className='logoutContainer'>\r\n            {error && error}\r\n            <h4>{authCtx.currentUser.email}</h4>\r\n            <button className=\"logOutBtn\" onClick={()=>onLogOutHandler()}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogOut","export default __webpack_public_path__ + \"static/media/landscape.ab92261d.jpg\";","import React, { useContext } from \"react\";\r\nimport Details from '../Components/Details/Details'\r\nimport Title from '../Components/Title/Title'\r\nimport Grid from \"../Components/Grid/Grid\";\r\nimport ImageOptions from \"../Components/ImageOptions/ImageOptions\";\r\nimport DisplayContent from \"../Components/DisplaySavedContent/DisplayContent\";\r\nimport CheckUserContent from \"../Components/SwitchPage/CheckUserContent\";\r\nimport LogInButton from \"../Components/LoginandSignIn/Buttons/loginButton\";\r\nimport SignInButton from \"../Components/LoginandSignIn/Buttons/signInButton\";\r\nimport LogOut from \"../Components/LoginandSignIn/Buttons/logout\";\r\nimport {AuthContext} from '../Context/AuthContext'\r\nimport { auth } from \"../Firebase/firebase\";\r\nimport bgImg from '../img/landscape.jpg'\r\n\r\n\r\nfunction MainPage() {\r\n\r\n  const authCtx = useContext(AuthContext)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img className=\"bgImg\" src={bgImg} alt=\"background img loading shortly\"/>\r\n      <Title />\r\n      <div className=\"titleBtnContainer\">\r\n       \r\n        <CheckUserContent />\r\n        \r\n        {!authCtx.currentUser && <LogInButton />}\r\n        {!authCtx.currentUser && <SignInButton />}\r\n        {auth.currentUser && <LogOut />}\r\n      </div>\r\n      <div className=\"mainContainer\">\r\n\r\n        <div className=\"row\">\r\n          <Details />\r\n          <Grid />\r\n        </div>\r\n        \r\n        <ImageOptions />\r\n        <DisplayContent />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import {Link} from 'react-router-dom'\r\n\r\nfunction BackButton(){\r\n    return (\r\n        <div style={{marginTop: \"20px\"}}>\r\n            <Link to=\"/\">\r\n                <button className=\"backBtn\">Back to Content Creation</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackButton","import {AuthContext} from '../../Context/AuthContext'\r\nimport { useContext } from 'react'\r\n\r\nfunction ContentSquares(props){\r\n\r\n    const authCtx = useContext(AuthContext)\r\n\r\n    return (\r\n        <div className=\"userContent\">\r\n            <img src={props.imgData} alt=\"Trying to load content\"></img>\r\n            <p>{`'${props.name}' by ${props.email}`}</p>\r\n            <p>{`Created on: ${props.date}`}</p>\r\n            <button\r\n                className=\"logOutBtn\" \r\n                onClick={() => props.deleteItem(props.identifier)}\r\n                style={{display: authCtx.currentUser.email === props.email ? \"block\" : \"none\"}}\r\n                >Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentSquares","import BackButton from \"../SwitchPage/BackButton\";\r\nimport ContentSquares from \"./ContentSquares\";\r\nimport {Context} from '../../Context/Context'\r\nimport { useContext } from 'react'\r\n\r\n\r\nfunction MainContentContainer() {\r\n\r\n    const ctx = useContext(Context)\r\n    \r\n    //ctx.userContent.sort((a,b) => b.timestamp - a.timestamp)\r\n\r\n\r\n\r\n    let allContentArr = ctx.userContent.map(item => (\r\n        <ContentSquares \r\n        key={item.id}\r\n        identifier={item.id}\r\n        imgData={item.imgData}\r\n        name={item.name}\r\n        email={item.email}\r\n        date={item.createdAt}\r\n        deleteItem={ctx.deleteContent}\r\n        />\r\n    ))\r\n\r\n    //console.log(ctx.userContent)\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"mainContentContainer\">\r\n        <BackButton />\r\n        <div className=\"userContentContainer\">\r\n            {allContentArr}\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\nexport default MainContentContainer;\r\n","import MainContentContainer from \"../Components/SharedContent/mainContainer\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../Context/AuthContext'\r\nimport React, {useContext} from 'react'\r\n\r\nfunction UserContent(){\r\n\r\n    const authCtx = useContext(AuthContext)\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {authCtx.currentUser? null : <Redirect to=\"/login\" />}\r\n            <MainContentContainer />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserContent","import { useRef, useContext, useState } from \"react\"\r\nimport {AuthContext} from '../../Context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction SignInPage(){\r\n\r\n    const authCtx = useContext(AuthContext)\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef =  useRef()\r\n\r\n    const [error, setError] = useState(\"\") \r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n\r\n\r\n    async function onSubmitHandler(e){\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await authCtx.signUp(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch {\r\n            setError(\"Failed to create account\")\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Link to=\"/\">\r\n                <button className=\"backBtn\" style={{marginTop: \"20px\"}}>Back</button>\r\n            </Link>\r\n            <h2 className=\"signinTitle\">Sign Up</h2>\r\n            <h3>{error}</h3>\r\n            <form className=\"signinForm\" onSubmit={onSubmitHandler}>\r\n                <div>\r\n                    <label>Email: </label>\r\n                    <input type=\"text\" ref={emailRef} required></input>\r\n                </div>\r\n                <div>\r\n                    <label>Password: </label>\r\n                    <input type=\"text\" ref={passwordRef} required></input>\r\n                </div>\r\n                <div>\r\n                    <label>Confirm Password: </label>\r\n                    <input type=\"text\" ref={confirmPasswordRef} required></input>\r\n                </div>\r\n                <div>\r\n                    <button disabled={loading} className=\"signInFormBtn\" type=\"submit\">Sign Up</button>\r\n                </div>\r\n            </form>\r\n\r\n            <h3>Already have an account? \r\n                <Link to=\"/login\">\r\n                    <button className=\"logInFormBtn\">Log In</button>\r\n                </Link>\r\n            </h3>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default SignInPage","import { useRef, useContext, useState } from \"react\"\r\nimport {AuthContext} from '../../Context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nfunction LogInPage(){\r\n\r\n    const authCtx = useContext(AuthContext)\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n\r\n    const [error, setError] = useState(\"\") \r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    async function onSubmitHandler(e){\r\n        e.preventDefault()\r\n        \r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await authCtx.logIn(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch {\r\n            setError(\"Failed to Log In\")\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n\r\n    async function onTestLoginHandler(e){\r\n        e.preventDefault()\r\n        \r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await authCtx.logIn('test@pixels.com', \"test12345\")\r\n            history.push('/')\r\n        } catch {\r\n            setError(\"Failed to Log In\")\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n\r\n\r\n    //style={{display: authCtx.currentUser.email? 'none' : 'block'}}\r\n    return (\r\n        <div >\r\n            <Link to=\"/\">\r\n            <button className=\"backBtn\" style={{marginTop: \"20px\"}}>Back</button>\r\n            </Link>\r\n            <h2 className=\"signinTitle\">Log In</h2>\r\n            {authCtx.currentUser && authCtx.currentUser.email}\r\n            <h2>Log in to view user content</h2>\r\n            <button className=\"logInButton\" onClick={onTestLoginHandler}>Use Guest Account</button>\r\n            <h3>{error}</h3>\r\n            <form className=\"signinForm\" onSubmit={onSubmitHandler}>\r\n                <div>\r\n                    <label>Email: </label>\r\n                    <input type=\"text\" ref={emailRef} required></input>\r\n                </div>\r\n                <div>\r\n                    <label>Password: </label>\r\n                    <input type=\"text\" ref={passwordRef} required></input>\r\n                </div>\r\n                <div>\r\n                    <button disabled={loading} className=\"signInFormBtn\" type=\"submit\">Log In</button>\r\n                </div>\r\n            </form>\r\n\r\n            <h3>Don't have an account? \r\n                <Link to=\"/signin\">\r\n                    <button className=\"logInFormBtn\">Sign Up</button>\r\n                </Link>\r\n            </h3>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default LogInPage","import React from \"react\";\r\nimport MainPage from \"./Pages/MainPage\";\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport UserContent from \"./Pages/UserContent\";\r\nimport SignInPage from \"./Components/LoginandSignIn/signInPage\";\r\nimport LogInPage from \"./Components/LoginandSignIn/logInPage\";\r\nimport './index.css'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n\r\n        <Route exact path='/'>\r\n          <MainPage />\r\n        </Route>\r\n        \r\n        <Route path=\"/usercontent\">\r\n          <UserContent />\r\n        </Route>\r\n        \r\n        <Route path=\"/signin\">\r\n          <SignInPage />\r\n        </Route>\r\n\r\n        <Route path=\"/login\" >\r\n          <LogInPage />\r\n        </Route>\r\n\r\n\r\n      </Switch>\r\n\r\n\r\n\r\n        \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ContextProvider } from \"../src/Context/Context\";\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport { AuthContextProvider } from \"./Context/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <AuthContextProvider>\r\n    <ContextProvider>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </ContextProvider>\r\n  </AuthContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}